{"version":3,"sources":["App.js","reportWebVitals.js","index.js","Context/ChatProvider.js","components/layouts/Loader.jsx"],"names":["Chatpage","React","lazy","Signup","Login","ForgetPassowrd","App","history","useHistory","user","JSON","parse","localStorage","getItem","useEffect","push","_jsx","className","children","Router","Suspense","fallback","Loader","_jsxs","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","ChatProvider","document","getElementById","ChatContext","createContext","ChatState","useContext","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","_useState9","_useState10","isAuth","setIsAuth","userInfo","Provider","value","Box","display","justifyContent","alignItems","height","backgroundColor","boxShadow","transform","marginRight","ChatBubble","fontSize","color","Text","fontWeight","marginLeft","CircularProgress","size"],"mappings":"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","file":"static/js/main.316e0a59.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport Loader from \"./components/layouts/Loader\";\n\nconst Chatpage = React.lazy(() => import(\"./Pages/Chatpage\"));\nconst Signup = React.lazy(() => import(\"./components/Authentication/Signup\"));\nconst Login = React.lazy(() => import(\"./components/Authentication/Login\"));\nconst ForgetPassowrd = React.lazy(() =>\n  import(\"./components/Authentication/ForgotPassword\")\n);\n\nfunction App() { \n  const history = useHistory(); \n  const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n \n  useEffect(() => {\n    if (!user) {\n      history.push(\"/\");\n    } else {\n      history.push(\"/chats\");\n    }\n  }, [history, user]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <React.Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/forgot/password\" component={ForgetPassowrd} />\n            <Route exact path=\"/chats\" component={Chatpage} />\n          </Switch>\n        </React.Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n const [isAuth, setIsAuth] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n        isAuth,\n        setIsAuth\n      }}\n\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import React from 'react';\r\nimport { Box, Text } from '@chakra-ui/react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ChatBubble } from '@material-ui/icons';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      height=\"100vh\"\r\n      backgroundColor=\"#1C1C28\"\r\n      boxShadow=\"0 0 20px rgba(0, 0, 0, 0.5)\"\r\n      transform=\"translateZ(0)\"\r\n    >\r\n      <Box display=\"flex\" alignItems=\"center\" marginRight={5}>\r\n        <ChatBubble fontSize=\"large\" color=\"primary\" />\r\n        <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"white\" marginLeft={2}>\r\n          Loading...\r\n        </Text>\r\n      </Box>\r\n      <CircularProgress color=\"primary\" size={30} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n"],"sourceRoot":""}