{"version":3,"sources":["components/layouts/MetaData/Metadata.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/EmojiOptions.js","img/img.jpg","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js"],"names":["MataData","_ref","title","_jsx","Helmet","children","socket","selectedChatCompare","isSameSenderMargin","messages","m","i","userId","length","sender","_id","isSameSender","undefined","isLastMessage","isSameUser","getSender","loggedUser","users","name","createdAt","user","Date","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","timeZone","format","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","_Fragment","onClick","IconButton","icon","ViewIcon","bg","color","pos","top","right","className","Modal","size","isCentered","ModalOverlay","ModalContent","h","w","pt","pb","ModalCloseButton","ModalBody","d","alignItems","justifyContent","Avatar","borderRadius","width","height","src","pic","alt","mr","Flex","direction","Text","fontSize","mt","toString","substring","email","fontWeight","ScrollableChat","ChatState","ScrollableFeed","map","style","display","Tooltip","label","placement","hasArrow","cursor","backgroundColor","concat","marginLeft","marginTop","padding","maxWidth","content","EmojiOptions","handleEmojiClick","_useState","useState","emojis","_slicedToArray","_useState3","_useState4","showOptions","setShowOptions","emoji","index","marginRight","handleClick","UserBadgeItem","handleFunction","admin","Badge","px","py","mb","variant","colorScheme","background","boxShadow","_hover","transform","CloseIcon","pl","UserListItem","Box","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","_useState2","groupChatName","setGroupChatName","search","setSearch","_useState5","_useState6","searchResult","setSearchResult","_useState7","_useState8","loading","setLoading","_useState9","_useState10","renameloading","setRenameLoading","_useState11","_useState12","isUserList","setUserList","toast","useToast","_ChatState","selectedChat","setSelectedChat","handleSearch","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","config","_yield$axios$get","data","wrap","_context","prev","next","abrupt","headers","axios","get","sent","console","log","t0","description","status","duration","isClosable","position","stop","_x","apply","arguments","handleRename","_ref3","_callee2","_yield$axios$put","_context2","Authorization","token","put","chatId","chatName","response","message","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","base","overflowY","ModalHeader","fontFamily","p","textShadow","flexDir","flexWrap","FormControl","Input","placeholder","_placeholder","value","onChange","e","target","Button","md","lg","isLoading","Spinner","ModalFooter","ENDPOINT","window","location","hostname","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","notification","setNotification","_useState13","_useState14","showEmojiOptions","setShowEmojiOptions","emit","sendMessage","event","_yield$axios$post","key","post","_toConsumableArray","useEffect","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","backgroundImage","bgSize","alignSelf","margin","onKeyDown","id","isRequired","Lottie","options","marginBottom","InputGroup","lastTypingTime","getTime","setTimeout","_focus","pr","InputRightElement","EmojiEmotionsIcon","prevState","Send","prevMessage","Chatbox","borderColor","borderWidth","ChatLoading","Stack","Array","_","Skeleton","GroupChatModal","selectedUsers","setSelectedUsers","chats","setChats","handleSubmit","JSON","stringify","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","parse","localStorage","getItem","rightIcon","AddIcon","latestMessage","SideDrawer","loadingChat","setLoadingChat","setIsAuth","history","useHistory","accessChat","c","bgGradient","_active","textTransform","bgClip","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","MenuItem","notif","n","as","ChevronDownIcon","border","shadow","textAlign","MenuDivider","EditIcon","boxSize","DeleteIcon","SettingsIcon","removeItem","push","ExternalLinkIcon","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","myuser","ml","Chatpage","MetaData"],"mappings":"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cAACqF,IAAc,CAAAnF,SACZI,GACCA,EAASgF,KAAI,SAAC/E,EAAGC,GAAC,OAChBgC,eAAA,OAAK+C,MAAO,CAAEC,QAAS,QAAStF,SAAA,EAC5BW,EAAaP,EAAUC,EAAGC,EAAGc,EAAKV,MAClCG,EAAcT,EAAUE,EAAGc,EAAKV,OAChCZ,cAACyF,IAAO,CAACC,MAAOnF,EAAEI,OAAOS,KAAMuE,UAAU,eAAeC,UAAQ,EAAA1F,SAC9DF,cAACkE,IAAM,CACLY,GAAG,MACHL,GAAI,EACJpB,KAAK,KACLwC,OAAO,UACPzE,KAAMb,EAAEI,OAAOS,KACfkD,IAAK/D,EAAEI,OAAO4D,QAIpBvE,cAAA,QACEuF,MAAO,CACLO,gBAAgB,GAADC,OACbxF,EAAEI,OAAOC,MAAQU,EAAKV,IAAM,UAAY,WAE1CoF,WAAY3F,EAAmBC,EAAUC,EAAGC,EAAGc,EAAKV,KACpDqF,UAAWjF,EAAWV,EAAUC,EAAGC,EAAGc,EAAKV,KAAO,EAAI,GACtDuD,aAAc,OACd+B,QAAS,WACTC,SAAU,OACVjG,SAEDK,EAAE6F,YA1B+B7F,EAAEK,IA4BlC,KAIhB,E,kBCgOeyF,EAhRM,SAAHvG,GAA8B,IAAxBwG,EAAgBxG,EAAhBwG,iBACtBC,EAAiBC,mBAAS,CACxB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,qBACA,eACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,eACA,qBACA,qBACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,qBACA,eACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uBAjPKC,EAkPLC,YAAAH,EAAA,GAlPW,GAqPdI,EAAsCH,oBAAS,GAAKI,EAAAF,YAAAC,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAOjC,OACE5G,cAAA,OAAKuF,MAAO,CAAEO,gBAAiB,WAAY5F,SACxC2G,GACC7G,cAAAyC,WAAA,CAAAvC,SACGuG,EAAOnB,KAAI,SAACyB,EAAOC,GAAK,OACvBhH,cAAA,QAEEuF,MAAO,CAAEM,OAAQ,UAAWoB,YAAa,QACzCvE,QAAS,kBAbD,SAACqE,GACnBT,EAAiBS,GACjBD,GAAe,EACjB,CAU2BI,CAAYH,EAAM,EAAC7G,SAEjC6G,GAJIC,EAKA,OAMnB,E,SChRe,MAA0B,gC,SCiC1BG,EA9BO,SAAHrH,GAA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","file":"static/js/9.ee400596.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nfunction MataData({ title }) {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n  );\r\n}\r\n\r\nexport default MataData;\r\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n} from \"@chakra-ui/react\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport Send from \"@mui/icons-material/Send\";\nimport {  Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport EmojiOptions from \"./EmojiOptions\";\nimport animationData from \"../animations/typing.json\";\nimport backgroundImage from \"../img/img.jpg\";\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ENDPOINT = window.location.hostname === \"localhost\"\n  ? \"http://localhost:5000\"\n  : \"https://chat-mind-production.up.railway.app/\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const [showEmojiOptions, setShowEmojiOptions] = useState(false);\n\n  const handleEmojiClick = (emoji) => {\n    setNewMessage((prevMessage) => prevMessage + emoji);\n  };\n\n  const handleToggleEmojiOptions = () => {\n    setShowEmojiOptions((prevState) => !prevState);\n  };\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n         \"Content-type\": \"application/json\",\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n \n// sendMessage is used to send message on clicking send button\n  const sendMessage = async (event) => {\n    if (newMessage && event.key === \"Enter\") {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n\n        setNewMessage(\"\");\n\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            fontWeight={800}\n              textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          \n            \n          >\n            <IconButton\n              bg=\"linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%);\"\n              color=\"#F2F2F5\"\n              _hover={{ bg: \"#6600CC\" }}\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg={`url(${backgroundImage})`}\n            bgSize=\"cover\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n\n              <InputGroup>\n                <Input\n                  variant=\"filled\"\n                  bg=\"#28293D\"\n                  placeholder=\"Enter a message..\"\n                  value={newMessage}\n                  color=\"#F2F2F5\"\n                  _placeholder={{ color: \"#F2F2F5\" }}\n                  _hover={{ bg: \"#1C1C28\" }}\n                  onChange={typingHandler}\n                  _focus={{\n                    bg: \"#1C1C28\",\n                  }}\n                  pr=\"4rem\"\n                  pb=\"0\" \n                 \n                />\n                <InputRightElement width=\"4rem\">\n                  <IconButton\n                    icon={<EmojiEmotionsIcon />}\n                    onClick={handleToggleEmojiOptions}\n                    aria-label=\"Open Emoji Options\"\n                    bg=\"none\"\n                    _hover={{ bg: \"none\" }}\n                    color=\"linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%)\"\n                  />\n                  <IconButton\n                    icon={<Send />}\n                    onClick={sendMessage}\n                    aria-label=\"Send Message\"\n                    bg=\"none\"\n                    _hover={{ bg: \"none\" }}\n                    color=\"linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%)\"\n                  />\n                </InputRightElement>\n              </InputGroup>\n              {showEmojiOptions && (\n                <EmojiOptions handleEmojiClick={handleEmojiClick} />\n              )}\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n\n\n\nexport const createdAt = (user) => {\nconst createdAt = new Date(user.createdAt);\nconst options = {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  hour12: true,\n  timeZone: \"Asia/Kolkata\",\n};\n\nconst formatter = new Intl.DateTimeFormat(\"en-IN\", options);\nconst formattedDate = formatter.format(createdAt);\nreturn formattedDate;\n  \n}","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n \n  ModalBody,\n  ModalCloseButton,\n\n  useDisclosure,\n  IconButton,\n  Text,\n\n} from \"@chakra-ui/react\";\nimport { Flex, Avatar } from \"@chakra-ui/react\";\nimport { createdAt } from \"../../config/ChatLogics\";\nimport \"./SideDrawer.css\";\n\n\nconst ProfileModal = ({ user, children }) => {\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\nreturn (\n  <>\n    {children ? (\n      <span onClick={onOpen}>{children}</span>\n    ) : (\n      <IconButton\n        icon={<ViewIcon  />}\n        onClick={onOpen}\n        bg=\"red\"\n        color=\"white\"\n        pos=\"absolute\"\n        top={4}\n        right={4}\n        className=\"close-button\"\n      />\n    )}\n    <Modal size=\"2xl\" onClose={onClose} isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent\n        h=\"auto\"\n        w=\"auto\"\n        bg=\"#28293D\"\n        color=\"#F2F2F5\"\n        pt={4}\n        pb={4}\n      >\n        <ModalCloseButton color=\"#F2F2F5\" pos=\"absolute\" top={4} right={4} />\n        <ModalBody d=\"flex\" alignItems=\"center\" justifyContent=\"center\" className=\"profileModel\">\n          <Avatar\n            size=\"xl\"\n            borderRadius=\"lg\"\n            width=\"200px\"\n            height=\"200px\"\n            src={user.pic}\n            alt={user.name}\n            mr={8}\n          />\n          <Flex direction=\"column\" alignItems=\"flex-start\">\n            <Text fontSize=\"1.2rem\" mt={2}>\n              ID: {user._id.toString().substring(0, 9)}\n            </Text>\n            <Text fontSize=\"1.2rem\" mt={2}>\n              Created At: {createdAt(user)}\n            </Text>\n            <Text fontSize=\"1.2rem\" mt={2}>\n              Email: {user.email}\n            </Text>\n            <Text fontSize=\"2rem\" fontWeight=\"bold\" mt={4}>\n              {user.name}\n            </Text>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  </>\n);\n\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#4D0099\" : \"#6600CC\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import React, { useState } from \"react\";\r\n\r\nconst EmojiOptions = ({ handleEmojiClick }) => {\r\n  const [emojis] = useState([\r\n    \"😀\",\r\n    \"😃\",\r\n    \"😄\",\r\n    \"😁\",\r\n    \"😆\",\r\n    \"😅\",\r\n    \"😂\",\r\n    \"🤣\",\r\n    \"😊\",\r\n    \"😇\",\r\n    \"🙂\",\r\n    \"🙃\",\r\n    \"😉\",\r\n    \"😌\",\r\n    \"😍\",\r\n    \"🥰\",\r\n    \"😘\",\r\n    \"😗\",\r\n    \"😙\",\r\n    \"😚\",\r\n    \"😋\",\r\n    \"😛\",\r\n    \"😝\",\r\n    \"😜\",\r\n    \"🤪\",\r\n    \"🤨\",\r\n    \"🧐\",\r\n    \"🤓\",\r\n    \"😎\",\r\n    \"🤩\",\r\n    \"🥳\",\r\n    \"😏\",\r\n    \"😒\",\r\n    \"😞\",\r\n    \"😔\",\r\n    \"😟\",\r\n    \"😕\",\r\n    \"🙁\",\r\n    \"😣\",\r\n    \"😖\",\r\n    \"😫\",\r\n    \"😩\",\r\n    \"🥺\",\r\n    \"😢\",\r\n    \"😭\",\r\n    \"😤\",\r\n    \"😠\",\r\n    \"😡\",\r\n    \"🤬\",\r\n    \"🤯\",\r\n    \"😳\",\r\n    \"🥵\",\r\n    \"🥶\",\r\n    \"😱\",\r\n    \"😨\",\r\n    \"😰\",\r\n    \"😥\",\r\n    \"😓\",\r\n    \"🤗\",\r\n    \"🤔\",\r\n    \"🤭\",\r\n    \"🤫\",\r\n    \"🤥\",\r\n    \"😶\",\r\n    \"😐\",\r\n    \"😑\",\r\n    \"😬\",\r\n    \"🙄\",\r\n    \"😯\",\r\n    \"😦\",\r\n    \"😧\",\r\n    \"😮\",\r\n    \"😲\",\r\n    \"🥱\",\r\n    \"😴\",\r\n    \"🤤\",\r\n    \"😪\",\r\n    \"😵\",\r\n    \"🤐\",\r\n    \"🥴\",\r\n    \"🤢\",\r\n    \"🤮\",\r\n    \"🤧\",\r\n    \"😷\",\r\n    \"🤒\",\r\n    \"🤕\",\r\n    \"🤑\",\r\n    \"🤠\",\r\n    \"😈\",\r\n    \"👿\",\r\n    \"👹\",\r\n    \"👺\",\r\n    \"🤡\",\r\n    \"💩\",\r\n    \"👻\",\r\n    \"💀\",\r\n    \"☠️\",\r\n    \"👽\",\r\n    \"👾\",\r\n    \"🤖\",\r\n    \"✌️\",\r\n    \"☀️\",\r\n    \"⚽️\",\r\n    \"❤️\",\r\n    \"⚾️\",\r\n    \"⛄️\",\r\n    \"⛵️\",\r\n    \"🚢\",\r\n    \"✈️\",\r\n    \"🚀\",\r\n    \"🚆\",\r\n    \"🚗\",\r\n    \"🚲\",\r\n    \"🛴\",\r\n    \"🛵\",\r\n    \"🏍️\",\r\n    \"🚔\",\r\n    \"🚒\",\r\n    \"🚑\",\r\n    \"🚒\",\r\n    \"🚓\",\r\n    \"🚨\",\r\n    \"🚦\",\r\n    \"🛑\",\r\n    \"🚧\",\r\n    \"🛣️\",\r\n    \"🗻\",\r\n    \"⛰️\",\r\n    \"🏔️\",\r\n    \"🌋\",\r\n    \"🏕️\",\r\n    \"🏖️\",\r\n    \"🏜️\",\r\n    \"🏝️\",\r\n    \"🏞️\",\r\n    \"🏟️\",\r\n    \"🏛️\",\r\n    \"🏗️\",\r\n    \"🏘️\",\r\n    \"🏚️\",\r\n    \"🏠\",\r\n    \"🏡\",\r\n    \"🏢\",\r\n    \"🏣\",\r\n    \"🏥\",\r\n    \"🏦\",\r\n    \"🏨\",\r\n    \"🏩\",\r\n    \"🏪\",\r\n    \"🏫\",\r\n    \"🏬\",\r\n    \"🏭\",\r\n    \"🏯\",\r\n    \"🏰\",\r\n    \"💒\",\r\n    \"🗼\",\r\n    \"🗽\",\r\n    \"⛪️\",\r\n    \"🕌\",\r\n    \"🕍\",\r\n    \"⛩️\",\r\n    \"🕋\",\r\n    \"🛕️\",\r\n    \"🛖️\",\r\n    \"🛗️\",\r\n    \"🛚️\",\r\n    \"🛛️\",\r\n    \"🛜️\",\r\n    \"🛝️\",\r\n    \"🛞️\",\r\n    \"🛟️\",\r\n    \"🛠️\",\r\n    \"🛡️\",\r\n    \"🛢️\",\r\n    \"🛣️\",\r\n    \"🛤️\",\r\n    \"🛥️\",\r\n    \"🛩️\",\r\n    \"🛫\",\r\n    \"🛬\",\r\n    \"🛰️\",\r\n    \"🛳️\",\r\n    \"🛴\",\r\n    \"🛵\",\r\n    \"🏍️\",\r\n    \"🚔\",\r\n    \"🚒\",\r\n    \"🚑\",\r\n    \"🚒\",\r\n    \"🚓\",\r\n    \"🚨\",\r\n    \"🚦\",\r\n    \"🛑\",\r\n    \"🚧\",\r\n    \"🛣️\",\r\n    \"🗻\",\r\n    \"⛰️\",\r\n    \"🏔️\",\r\n    \"🌋\",\r\n    \"🏕️\",\r\n    \"🏖️\",\r\n    \"🏜️\",\r\n    \"🏝️\",\r\n    \"🏞️\",\r\n    \"🏟️\",\r\n    \"🏛️\",\r\n    \"🏗️\",\r\n    \"🏘️\",\r\n    \"🏚️\",\r\n    \"🏠\",\r\n    \"🏡\",\r\n    \"🏢\",\r\n    \"🏣\",\r\n    \"🏥\",\r\n    \"🏦\",\r\n    \"🏨\",\r\n    \"🏩\",\r\n    \"🏪\",\r\n    \"🏫\",\r\n    \"🏬\",\r\n    \"🏭\",\r\n    \"🏯\",\r\n    \"🏰\",\r\n    \"💒\",\r\n    \"🗼\",\r\n    \"🗽\",\r\n    \"⛪️\",\r\n    \"🕌\",\r\n    \"🕍\",\r\n    \"⛩️\",\r\n    \"🕋\",\r\n    \"🛕️\",\r\n    \"🛖️\",\r\n    \"🛗️\",\r\n    \"🛚️\",\r\n    \"🛛️\",\r\n    \"🛜️\",\r\n    \"🛝️\",\r\n    \"🛞️\",\r\n    \"🛟️\",\r\n    \"🛠️\",\r\n  ]);\r\n \r\n\r\n const [showOptions, setShowOptions] = useState(true); // State variable to control visibility\r\n\r\n  const handleClick = (emoji) => {\r\n    handleEmojiClick(emoji);\r\n    setShowOptions(false); // Hide the emoji options after selection\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#28293D\" }}>\r\n      {showOptions && ( // Render the emoji options only when showOptions is true\r\n        <>\r\n          {emojis.map((emoji, index) => (\r\n            <span\r\n              key={index}\r\n              style={{ cursor: \"pointer\", marginRight: \"10px\" }}\r\n              onClick={() => handleClick(emoji)}\r\n            >\r\n              {emoji}\r\n            </span>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmojiOptions;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/img.572edcce.jpg\";","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n      style={{\n        background: \"linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%)\", \n        boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\", \n      }}\n      _hover={{\n        background: \"#4D0099\", \n        transform: \"scale(1.2)\", \n     marginLeft: \"5px\",\n      }}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\n\nconst UserListItem = ({user, handleFunction }) => {\n\n\n  return (\n    <Box\n \n    \n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#555770\"\n      _hover={{\n        bg: \"#6600CC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"#F2F2F5\" \n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport \"./SideDrawer.css\";\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const [isUserList , setUserList] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setUserList(true);\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n         \"Content-type\" : \"appilication/json\",\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n setUserList(false);\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n     \n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n       \n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(user1._id);\n    console.log(selectedChat._id); \n\n    try {\n      setLoading(true);\n      const config = { headers : {\"Content-type\" : \"application/json\"} };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        }, \n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent bg=\"#28293D\" overflowY=\"scroll\"\n        height=\"60%\"\n        >\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work Sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n            background=\"#1C1C28\"\n            color=\"#F2F2F5\"\n            p={2}\n            mb={3}\n            borderRadius=\"md\"\n            boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n            textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={1}\n                bg=\"#555770\"\n                color=\"#F2F2F5\"\n                _placeholder={{\n                  color: \"#F2F2F5\",\n                }}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                d=\"flex\"\n                fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n                color=\"#E4E4EB\"\n                background=\"linear-gradient(145.51deg, #AC5DD9 7.21%, #004FC4 94.47%);\n\"\n                textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n                boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n                _hover={{\n                  bg: \"#6600CC\",\n                }}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                bg=\"#555770\"\n                color=\"#F2F2F5\"\n                _placeholder={{\n                  color: \"#F2F2F5\",\n                }}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n             isUserList && searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              onClick={() => handleRemove(user)}\n              d=\"flex\"\n              fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n              color=\"#E4E4EB\"\n              background=\"linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%);\n\"\n              textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n              boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n              _hover={{\n                transform: \"scale(1.1)\",\n                bg: \"#6600CC\",\n              }}\n            >\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"#28293D\"\n     \n      color=\"#F2F2F5\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderColor=\"#555770\"\n      borderWidth=\"1px\"\n     \n\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/react\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack bg=\"#28293D\">\n      {[...Array(12)].map((_, index) => (\n        <Skeleton key={index} height=\"45px\" />\n      ))}\n    </Stack>\n  );\n};\n\n\n\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport \"./SideDrawer.css\";\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const {  chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n      \"Content-type\" : \"appilication/json\"\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n     \n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n   \n    if (selectedUsers.length <= 2) {\n      toast({\n        title: \"Please select more than 2 users\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n\n      return;\n    }\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n     \n  \n    try {\n      const config = { headers: { \"Content-type\": \"application/json\" } };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered\n      className=\"modal\"\n      >\n        <ModalOverlay />\n        <ModalContent bg=\"#28293D\">\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work Sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n            background=\"#1C1C28\"\n            color=\"#F2F2F5\"\n            p={2}\n            mb={3}\n            borderRadius=\"md\"\n            textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n            boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n            className=\"modalHeader\"\n          >\n            Create Group Chat\n          </ModalHeader>\n\n          <ModalCloseButton color=\"#F2F2F5\" />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                bg=\"#555770\"\n                color=\"#F2F2F5\"\n                _placeholder={{\n                  color: \"#F2F2F5\",\n                }}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                bg=\"#555770\"\n                color=\"#F2F2F5\"\n                _placeholder={{\n                  color: \"#F2F2F5\",\n                }}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>  \n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              d=\"flex\"\n              fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n              onClick={handleSubmit}\n              color=\"#E4E4EB\"\n              background=\"linear-gradient(147.14deg, #3E7BFA 6.95%, #6600CC 93.05%);\n\"\n              textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n              boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n              _hover={{\n                transform: \"scale(1.1)\",\n                bg: \"#6600CC\",\n              }}\n            >\n              Create Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport \"./styles.css\"\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"#28293D\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"2px\"\n      borderColor=\"#555770\"\n    >\n      <Box\n        pb={1}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work Sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        color=\"#E4E4EB\"\n        borderRadius=\"md\"\n        boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n        background=\"#1C1C28\"\n      >\n        <Box\n          fontWeight=\"bold\"\n          textShadow=\"3px 3px 6px rgba(0, 0, 0, 0.5)\"\n          className=\"heading\"\n        >\n          All Chats\n        </Box>\n        <GroupChatModal className=\"modal\">\n          <Button\n            className=\"chatBtn\"\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n            color=\"#E4E4EB\"\n            bg=\"linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%)\"\n            textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n            boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n            _hover={{\n              // Add hover effect styles\n              transform: \"scale(1.1)\",\n              bg: \"#6600CC\",\n            }}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      ;\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        background=\"#1C1C28\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n        boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#6600CC\" : \"#555770\"}\n                color={selectedChat === chat ? \"#E4E4EB\" : \"#F2F2F5\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n                boxShadow=\"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport \"./SideDrawer.css\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon ,  DeleteIcon, EditIcon, ExternalLinkIcon, SettingsIcon  } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport { createdAt } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n    setIsAuth,\n  } = ChatState();\n\n  \n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    setIsAuth(false);\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n;\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n   // handle the access chat function \n  const accessChat = async (userId) => {\n \n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n       \n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"#28293D\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n        borderColor=\"#555770\"\n        color=\"#EBEBF0\"\n      >\n        <Tooltip\n          label=\"Search Users to chat\"\n          hasArrow\n          placement=\"bottom-end\"\n          bgGradient=\"linear(to-r, #3E7BFA, #6600CC)\"\n          color=\"#FFFFFF\"\n          _hover={{\n            bg: \"#555770\",\n            color: \"#FFFFFF\",\n          }}\n        >\n          <Button\n            variant=\"ghost\"\n            onClick={onOpen}\n            _hover={{\n              bg: \"#555770\",\n            }}\n            _active={{\n              bg: \"transparent\",\n              color: \"#FFFFFF\",\n            }}\n          >\n            <i className=\"fas fa-search\"></i>\n            <Text\n              d={{ base: \"none\", md: \"flex\" }}\n              px={4}\n              _hover={{\n                bg: \"#555770\",\n              }}\n            >\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n\n        <Text\n        className =\"logo_text\"\n          fontSize=\"2.5rem\"\n          fontWeight=\"bold\"\n          textTransform=\"uppercase\"\n          display=\"inline-block\"\n          bgGradient=\"linear(to-r, #FF3B3B, #6600CC)\"\n          bgClip=\"text\"\n          cursor=\"pointer\"\n          textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\" // Update the shadow effect\n        >\n          ChatMind\n        </Text>\n\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2} bg=\"#28293D\" color=\"white\">\n              {!notification.length && <MenuItem>No New Messages</MenuItem>}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"transparent\" _hover={{ bg: \"#555770\" }}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n              <ChevronDownIcon _hover={{ color: \"#6600CC\" }} />\n            </MenuButton>\n            <MenuList bg=\"#28293D\" border=\"none\" shadow=\"none\" p={0}>\n              <Box p={2} textAlign=\"center\">\n                <Avatar size=\"md\" name={user.name} src={user.pic} mb={2} />\n                <Box fontSize=\"sm\">\n                  <strong>ID:</strong> {user._id.toString().substring(0 ,8)} <br />\n                  <strong>Name:</strong> {user.name} <br />\n                  <strong>Email:</strong> {user.email} <br />\n                  <strong>Created At:</strong> {createdAt(user)} <br />\n                </Box>\n              </Box>\n              <MenuDivider />\n              <ProfileModal user={user}>\n                <MenuItem _hover={{ bg: \"#555770\" }}>\n                  <EditIcon mr={2} boxSize={4} />\n                  Profile\n                </MenuItem>\n              </ProfileModal>\n              <MenuItem _hover={{ bg: \"#555770\" }}>\n                <DeleteIcon mr={2} boxSize={4} />\n                Delete Account\n              </MenuItem>\n\n              <MenuItem _hover={{ bg: \"#555770\" }}>\n                <SettingsIcon mr={2} boxSize={4} />\n                Settings\n              </MenuItem>\n              <MenuItem _hover={{ bg: \"#555770\" }} onClick={logoutHandler}>\n                <ExternalLinkIcon mr={2} boxSize={4} />\n                Logout\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent bg=\"#28293D\" color=\"#28293D\">\n          <DrawerHeader\n        \n            borderBottomWidth=\"1px\"\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n            display=\"inline-block\"\n            bgGradient=\"linear(to-r, #FF3B3B, #6600CC)\"\n            bgClip=\"text\"\n            cursor=\"pointer\"\n            textShadow=\"2px 2px 8px rgba(0, 0, 0, 0.6)\"\n            textAlign=\"center\"\n            fontSize=\"2rem\"\n          >\n            ChatMind\n          </DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                color=\"#F2F2F5\"\n                bg=\"#555770\"\n              />\n              <Button\n                onClick={handleSearch}\n                color=\"#F2F2F5\"\n                bg=\"#555770\"\n                _hover={{\n                  bg: \"#6600CC\",\n                  color: \"#F2F2F5\",\n                  boxShadow: \"2px 2px 8px rgba(0, 0, 0, 0.6)\",\n                }}\n                _active={{\n                  bg: \"#6600CC\",\n                  color: \"#F2F2F5\",\n                  boxShadow: \"none\",\n                }}\n                p={3}\n              >\n                Go\n              </Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((myuser) => (\n                <UserListItem\n                  key={myuser._id}\n                  user={myuser}\n                  handleFunction={() => accessChat(myuser._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState  } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport MetaData from \"../components/layouts/MetaData/Metadata\";\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false); \n  const { user  } = ChatState();\n;\n\n\n  return (\n    <>\n      <MetaData title=\"Chat\" />\n      <div style={{ width: \"100%\" }}>\n        {user && <SideDrawer />}\n        <Box\n          d=\"flex\"\n          justifyContent=\"space-between\"\n          w=\"100%\"\n          h=\"91.5vh\"\n          p=\"10px\"\n        >\n          {user && <MyChats fetchAgain={fetchAgain} />}\n          {user && (\n            <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n          )}\n        </Box>\n      </div>\n    </>\n  );\n};\n\nexport default Chatpage;\n"],"sourceRoot":""}